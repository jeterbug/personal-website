/*
 * Portfolio Website – Glassmorphic dark/light theme with secondary accent
 *
 * This stylesheet defines the visual language for the portfolio site.  It
 * introduces a secondary accent colour to complement the minimal glass
 * surfaces, adds layout variations for each section, and implements
 * responsive navigation with a hamburger menu on mobile.  Smooth scroll
 * behaviour and subtle animations make the site feel premium.
 */

/* CSS custom properties for colours and effects */
:root {
  /* Glass backgrounds for light and dark modes */
  --glass-light: rgba(255, 255, 255, 0.25);
  --glass-dark: rgba(30, 30, 30, 0.35);
  /* Borders for glass panels */
  --border-light: rgba(255, 255, 255, 0.3);
  --border-dark: rgba(255, 255, 255, 0.1);
  /* Drop shadow for depth */
  --shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
  /* Primary text colours */
  --text-dark: #0a0a0a;
  --text-light: #eaeaea;
  /* Background accents used on body */
  --accent-light: linear-gradient(135deg, #f7f8fa 0%, #edeff2 100%);
  --accent-dark: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%);
  /* Secondary colour for highlights – changed from blue to a darker grey
     to give the site a more premium, understated feel */
  --secondary: #5d5d61;
  /* Animation timing */
  --transition: 0.3s ease;
}

/* Global styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'Inter', sans-serif;
}

html {
  scroll-behavior: smooth;
}

body {
  background: var(--accent-light);
  color: var(--text-dark);
  transition: background var(--transition), color var(--transition);
  line-height: 1.6;
  overflow-x: hidden;

  /*
    Add top padding equal to the approximate height of the fixed navbar.  Without this
    padding the hero and subsequent sections would slide underneath the nav when
    scrolling.  Adjust this value if you change the navbar's height.
  */
  padding-top: 80px;
}

body.dark-mode {
  background: var(--accent-dark);
  color: var(--text-light);
}

/* Navigation bar */
.navbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 2rem;
  backdrop-filter: blur(12px);
  background: var(--glass-light);
  border-bottom: 1px solid var(--border-light);
  /*
    Make the navbar fixed so it remains visible as the user scrolls.
    A fixed position ensures the nav stays pinned to the top of the viewport.
  */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1000;
  border-radius: 0 0 24px 24px;
  box-shadow: var(--shadow);
}

body.dark-mode .navbar {
  background: var(--glass-dark);
  border-color: var(--border-dark);
}

.logo {
  font-weight: 700;
  font-size: 1.5rem;
  color: var(--text-dark);
}

body.dark-mode .logo {
  color: var(--text-light);
}

/* Navigation links */
.nav-links {
  list-style: none;
  display: flex;
  gap: 2rem;
}

.nav-links li a {
  text-decoration: none;
  color: inherit;
  font-weight: 500;
  position: relative;
}

.nav-links li a::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -3px;
  width: 100%;
  height: 2px;
  background: var(--secondary);
  transform: scaleX(0);
  transform-origin: right;
  transition: transform var(--transition);
}

.nav-links li a:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}

/* Mobile navigation */
.menu-icon {
  display: none;
  background: transparent;
  border: none;
  color: inherit;
  font-size: 1.8rem;
  cursor: pointer;
}

/* Animate the hamburger icon when active */
.menu-icon.is-active ion-icon {
  transform: rotate(90deg);
  transition: transform var(--transition);
}

.toggle-mode {
  margin-left: 1rem;
  cursor: pointer;
  width: 40px;
  height: 20px;
  background: #999;
  border-radius: 20px;
  border: none;
  position: relative;
  transition: background var(--transition);
}

.toggle-mode::after {
  content: '';
  position: absolute;
  top: 2px;
  left: 2px;
  width: 16px;
  height: 16px;
  background: #fff;
  border-radius: 50%;
  transition: var(--transition);
}

body.dark-mode .toggle-mode {
  background: #555;
}

body.dark-mode .toggle-mode::after {
  left: 22px;
}

/* Responsive behaviour */
@media (max-width: 768px) {
  .nav-links {
    position: fixed;
    top: 80px;
    right: -100%;
    width: 70%;
    /* Adjust the height to account for the slightly taller fixed navbar */
    height: calc(100vh - 80px);
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2rem;
    background: var(--glass-light);
    backdrop-filter: blur(16px);
    border-left: 1px solid var(--border-light);
    transition: right var(--transition);
  }

  body.dark-mode .nav-links {
    background: var(--glass-dark);
    border-color: var(--border-dark);
  }

  .nav-links.active {
    right: 0;
  }

  .menu-icon {
    display: block;
  }

  .nav-links li {
    margin: 0;
  }

  .logo {
    font-size: 1.3rem;
  }
}

/* Section wrapper provides spacing */
.section-wrapper {
  /* Reduce vertical padding to tighten spacing between sections */
  padding: 3rem 1rem;
}

/* Base section styles */
.section {
  max-width: 1000px;
  margin: 0 auto 3rem;
  padding: 2.5rem 2rem;
  border-radius: 24px;
  box-shadow: var(--shadow);
  backdrop-filter: blur(20px);
  border: 1px solid var(--border-light);
  background: var(--glass-light);
  transition: background var(--transition), border var(--transition);
}

body.dark-mode .section {
  background: var(--glass-dark);
  border-color: var(--border-dark);
}

/* Section specific styles to add variety */
.hero-section {
  /*
    The hero section becomes a full‑viewport container.  It uses
    position:relative and removes card borders so the video can
    fill the entire area.  Content is centered on top of the video.
  */
  position: relative;
  height: 100vh;
  margin-bottom: 4rem;
  padding: 0;
  border: none;
  box-shadow: none;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

/* Background video styling for the hero */
.hero-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: -1;
  /* Darken the video slightly so text remains legible */
  filter: brightness(0.6);
  /* Round the corners of the hero video to echo the glass panels */
  border-radius: 24px;
}

body.dark-mode .hero-video {
  /* Darken further in dark mode */
  filter: brightness(0.4);
}

/* Container for hero text and call‑to‑action */
.hero-content {
  position: relative;
  z-index: 1;
  max-width: 800px;
  margin: 0 1rem;
  padding: 2rem;

  /* Use light text colours on top of the darkened video to improve contrast. */
  color: var(--text-light);
}

/* Add spacing above the hero call‑to‑action without affecting other buttons */
.hero-content .cta-button {
  margin-top: 1rem;
}

/* Override text colour for headings and paragraphs inside the hero so they remain legible in both modes */
.hero-content h1,
.hero-content p {
  color: var(--text-light);
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
}

.hero-content .cta-button {
  /* Ensure the call‑to‑action stands out against the video */
  color: #ffffff;
}

/* Reset flex behaviour on the about section itself; the layout is handled by
   the .about-content container instead. Leaving this rule empty prevents
   inheritance of unwanted flex properties on larger screens. */
.about-section {
  display: block;
}

@media (min-width: 768px) {
  .about-section .about-content {
    /* Arrange the about text and image side by side on larger screens */
    display: flex;
    flex-direction: row;
    gap: 2rem;
    align-items: center;
  }
}

.skills-section {
  background: linear-gradient(145deg, var(--glass-light), rgba(255, 255, 255, 0.3));
}

.portfolio-section {
  background: linear-gradient(215deg, var(--glass-light), rgba(255, 255, 255, 0.3));
}

.contact-section {
  background: linear-gradient(45deg, var(--glass-light), rgba(255, 255, 255, 0.3));
}

/* Add more spacing between the contact body copy and the form */
.contact-section p {
  margin-bottom: 2.5rem;
}

/* Reduce spacing between the About section headline and its body copy */
.about-section .section-header {
  margin-bottom: 0.5rem;
}

/* Section headers */
.section-header {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1.5rem;
}

.section-header ion-icon {
  font-size: 1.5rem;
  color: var(--secondary);
}

.section-header h2 {
  font-size: 2rem;
  font-weight: 600;
}

/* Typography */
h1 {
  font-size: 3rem;
  font-weight: 700;
  margin-bottom: 1rem;
}

h2 {
  font-size: 2rem;
  font-weight: 600;
  margin-bottom: 1rem;
}

h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-top: 0.75rem;
}

p {
  font-size: 1.125rem;
  line-height: 1.7;
  margin-top: 0.5rem;
}

/* About section layout */
.about-content {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  align-items: center;
}

/* On larger screens, arrange the about section content in a row so the text
   and image sit side by side. This override is placed after the default
   column layout to ensure it takes precedence. */
@media (min-width: 768px) {
  .about-content {
    flex-direction: row;
    gap: 2rem;
    align-items: center;
  }
}

.about-text {
  flex: 1;
}

.about-image {
  flex: 1;
  display: flex;
  justify-content: center;
}

.about-image img {
  max-width: 100%;
  height: auto;
  border-radius: 20px;
  border: 2px solid var(--border-light);
  box-shadow: var(--shadow);
  object-fit: cover;
}

body.dark-mode .about-image img {
  border-color: var(--border-dark);
}

/* Skills grid */
.skills-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  gap: 2rem;
}

.skill-card {
  text-align: center;
  padding: 2rem 1.5rem;
  border-radius: 20px;
  background: var(--glass-light);
  border: 1px solid var(--border-light);
  backdrop-filter: blur(16px);
  box-shadow: var(--shadow);
  transition: transform var(--transition), box-shadow var(--transition);
}

body.dark-mode .skill-card {
  background: var(--glass-dark);
  border-color: var(--border-dark);
}

.skill-card ion-icon {
  font-size: 2rem;
  color: var(--secondary);
  margin-bottom: 0.5rem;
}

.skill-card:hover {
  transform: translateY(-6px);
  box-shadow: 0 12px 48px rgba(0, 0, 0, 0.25);
}

/* Portfolio grid */
.portfolio-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 2rem;
}

.portfolio-item {
  background: var(--glass-light);
  border: 1px solid var(--border-light);
  border-radius: 20px;
  box-shadow: var(--shadow);
  padding: 1rem;
  backdrop-filter: blur(16px);
  transition: transform var(--transition), box-shadow var(--transition);
}

body.dark-mode .portfolio-item {
  background: var(--glass-dark);
  border-color: var(--border-dark);
}

.portfolio-img {
  width: 100%;
  height: 180px;
  object-fit: cover;
  border-radius: 16px;
  margin-bottom: 1rem;
  border: 1px solid var(--border-light);
}

body.dark-mode .portfolio-img {
  border-color: var(--border-dark);
}

.portfolio-item h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.portfolio-item p {
  font-size: 1rem;
  line-height: 1.6;
}

.portfolio-item:hover {
  transform: translateY(-6px);
  box-shadow: 0 12px 48px rgba(0, 0, 0, 0.25);
}

/* Contact form */
.contact-form {
  max-width: 600px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.form-group {
  display: flex;
  flex-direction: column;
}

.form-group label {
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.form-group input,
.form-group textarea {
  padding: 0.75rem 1rem;
  border-radius: 12px;
  border: 1px solid var(--border-light);
  background: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(8px);
  color: inherit;
  outline: none;
  transition: border var(--transition), background var(--transition);

  /* Add a subtle outline to differentiate fields on light backgrounds */
  outline: 1px solid var(--border-light);
}

body.dark-mode .form-group input,
body.dark-mode .form-group textarea {
  background: rgba(0, 0, 0, 0.25);
  border-color: var(--border-dark);
}

.form-group input:focus,
.form-group textarea:focus {
  border-color: var(--secondary);
  background: rgba(255, 255, 255, 0.25);
  /* Emphasise focus with secondary colour outline */
  outline: 2px solid var(--secondary);
}

body.dark-mode .form-group input:focus,
body.dark-mode .form-group textarea:focus {
  background: rgba(0, 0, 0, 0.35);
}

/* Call to action buttons */
.cta-button {
  display: inline-block;
  padding: 0.8rem 1.5rem;
  border-radius: 16px;
  border: 1px solid var(--border-light);
  background: var(--secondary);
  color: #ffffff;
  font-weight: 600;
  text-decoration: none;
  cursor: pointer;
  transition: background var(--transition), box-shadow var(--transition);

}

.cta-button:hover {
  /* Use only the box shadow here; colour will be adjusted by the filter in the next rule */
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

/* The darken function isn't built into CSS; approximate using filter */
.cta-button:hover {
  filter: brightness(0.9);
}

/* Fade-in animation for sections */
.fade-in-section {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.8s ease, transform 0.8s ease;
}

.fade-in-section.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Footer styling */
footer {
  text-align: center;
  padding: 2rem 1rem;
  margin-top: 2rem;
  font-size: 0.9rem;
  color: var(--text-dark);
  background: var(--glass-light);
  border-top: 1px solid var(--border-light);
  backdrop-filter: blur(12px);
  border-radius: 24px 24px 0 0;
  box-shadow: var(--shadow);
}

body.dark-mode footer {
  color: var(--text-light);
  background: var(--glass-dark);
  border-color: var(--border-dark);
}